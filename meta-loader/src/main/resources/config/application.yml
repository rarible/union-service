application:
  project: protocol

server:
  shutdown: graceful
  port: 8080

spring:
  application.name: union-meta-loader
  jackson:
    mapper:
      ACCEPT_CASE_INSENSITIVE_ENUMS: true
    deserialization:
      FAIL_ON_UNKNOWN_PROPERTIES: false
    default-property-inclusion: non_null
  aop:
    proxy-target-class: false
  main:
    banner-mode: log
    web-application-type: reactive

rarible:
  core:
    apm:
      agent:
        enabled: true
        server: http://elk_apm-server:8200
        packages: com.rarible.protocol.union.meta.loader
      web:
        filter:
          enabled: false
      annotation:
        enabled: true
  loader:
    broker-replica-set: ${kafka.hosts}
    topicsPrefix: protocol.${application.environment}.union.internal.loader
    enableNotifications: false
    enableWorkers: true
    workers: 4
    loadTasksBatchSize: 10
    retry:
      # Retry after 24h
      backoffDelaysMillis: [ 86400000 ]
      job:
        runner:
          period: 30000 # Schedule retry tasks every 30s

meta:
  ipfsGateway: "https://rarible.mypinata.cloud/"
  mediaFetchTimeout: 10000
  mediaFetchMaxSize: 10485760
  openSeaProxyUrl: ${consul.meta.openSeaProxyUrl}

#  Not needed in the meta-loader module. Transitive dependency onto the "core" module
common:
  producer:
    broker-replica-set: ${kafka.hosts}
