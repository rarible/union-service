openapi: 3.0.3
info:
  title: OpenAPI definition
  version: v0.1

paths:

  ######################### Sign API #########################

  "/v0.1/signature/validate":
    post:
      tags:
        - signature-controller
      operationId: validate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignatureValidationForm"
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: boolean
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  ######################### Item API #########################

  /v0.1/items/{itemId}:
    get:
      tags:
        - item-controller
      description: "returns Item by identifier"
      operationId: getItemById
      parameters:
        - name: "itemId"
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Item"
        '404':
          $ref: "#/components/responses/EntityNotFound"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  /v0.1/items/byOwner:
    get:
      tags:
        - item-controller
      operationId: getItemsByOwner
      parameters:
        - name: "owner"
          in: query
          required: true
          schema:
            type: string
        - name: "continuation"
          in: query
          required: false
          schema:
            type: string
        - name: "size"
          in: query
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  /v0.1/items/byCreator:
    get:
      tags:
        - item-controller
      operationId: getItemsByCreator
      parameters:
        - name: "creator"
          in: query
          required: true
          schema:
            type: string
        - name: "continuation"
          in: query
          required: false
          schema:
            type: string
        - name: "size"
          in: query
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  /v0.1/items/byCollection:
    get:
      tags:
        - item-controller
      operationId: getItemsByCollection
      parameters:
        - name: "collection"
          in: query
          required: true
          schema:
            type: string
        - name: "continuation"
          in: query
          required: false
          schema:
            type: string
        - name: "size"
          in: query
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  /v0.1/items/all:
    get:
      tags:
        - item-controller
      operationId: getAllItems
      parameters:
        - name: "blockchains"
          in: query
          required: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Blockchain"
        - name: "continuation"
          in: query
          required: false
          schema:
            type: string
        - name: "size"
          in: query
          required: false
          schema:
            type: integer
        - name: "showDeleted"
          in: query
          required: false
          schema:
            type: boolean
        - name: "lastUpdatedFrom"
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: "lastUpdatedTo"
          in: query
          required: false
          schema:
            type: integer
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  ####################### Ownership API #######################

  /v0.1/ownerships/{ownershipId}:
    get:
      tags:
        - ownership-controller
      operationId: getOwnershipById
      parameters:
        - name: "ownershipId"
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ownership"
        '404':
          $ref: "#/components/responses/EntityNotFound"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  /v0.1/ownerships/byItem:
    get:
      tags:
        - ownership-controller
      operationId: getOwnershipsByItem
      parameters:
        - name: "contract"
          in: query
          required: true
          schema:
            type: string
        - name: "tokenId"
          in: query
          required: true
          schema:
            $ref: "#/components/schemas/BigInteger"
        - name: "continuation"
          in: query
          required: false
          schema:
            type: string
        - name: "size"
          in: query
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ownerships"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  /v0.1/ownerships/all:
    get:
      tags:
        - ownership-controller
      operationId: getAllOwnerships
      parameters:
        - name: "blockchains"
          in: query
          required: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Blockchain"
        - name: "continuation"
          in: query
          required: false
          schema:
            type: string
        - name: "size"
          in: query
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ownerships"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  ######################## Order API ########################

  /v0.1/orders/{id}:
    get:
      tags:
        - order-controller
      operationId: getOrderById
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        '404':
          $ref: "#/components/responses/EntityNotFound"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  "/v0.1/orders/byIds":
    post:
      tags:
        - order-controller
      operationId: getOrdersByIds
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderIds"
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Order"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  /v0.1/orders/all:
    get:
      tags:
        - order-controller
      operationId: getOrdersAll
      parameters:
        - name: blockchains
          in: query
          required: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Blockchain"
        - name: platform
          in: query
          required: false
          schema:
            "$ref": "#/components/schemas/Platform"
        - name: "origin"
          in: query
          required: false
          schema:
            type: string
        - name: "continuation"
          in: query
          required: false
          schema:
            type: string
        - name: "size"
          in: query
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Orders"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  /v0.1/orders/sell/byMaker:
    get:
      tags:
        - order-controller
      operationId: getSellOrdersByMaker
      parameters:
        - name: platform
          in: query
          required: false
          schema:
            "$ref": "#/components/schemas/Platform"
        - name: "maker"
          in: query
          required: true
          schema:
            type: string
        - name: "origin"
          in: query
          required: false
          schema:
            type: string
        - name: "continuation"
          in: query
          required: false
          schema:
            type: string
        - name: "size"
          in: query
          required: false
          schema:
            minimum: 1
            type: integer
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Orders"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  /v0.1/orders/sell/byItem:
    get:
      tags:
        - order-controller
      operationId: getSellOrdersByItem
      parameters:
        - name: platform
          in: query
          required: false
          schema:
            "$ref": "#/components/schemas/Platform"
        - name: "contract"
          in: query
          required: true
          schema:
            type: string
        - name: "tokenId"
          in: query
          required: true
          schema:
            $ref: "#/components/schemas/BigInteger"
        - name: "maker"
          in: query
          required: false
          schema:
            type: string
        - name: "origin"
          in: query
          required: false
          schema:
            type: string
        - name: "continuation"
          in: query
          required: false
          schema:
            type: string
        - name: "size"
          in: query
          required: false
          schema:
            minimum: 1
            type: integer
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Orders"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  /v0.1/orders/sell/byCollection:
    get:
      tags:
        - order-controller
      operationId: getSellOrdersByCollection
      parameters:
        - name: platform
          in: query
          required: false
          schema:
            "$ref": "#/components/schemas/Platform"
        - name: "collection"
          in: query
          required: true
          schema:
            type: string
        - name: "origin"
          in: query
          required: false
          schema:
            type: string
        - name: "continuation"
          in: query
          required: false
          schema:
            type: string
        - name: "size"
          in: query
          required: false
          schema:
            minimum: 1
            type: integer
            format: int32
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Orders"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  /v0.1/orders/sell:
    get:
      tags:
        - order-controller
      operationId: getSellOrders
      parameters:
        - name: "blockchains"
          in: query
          required: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Blockchain"
        - name: platform
          in: query
          required: false
          schema:
            "$ref": "#/components/schemas/Platform"
        - name: "origin"
          in: query
          required: false
          schema:
            type: string
        - name: "continuation"
          in: query
          required: false
          schema:
            type: string
        - name: "size"
          in: query
          required: false
          schema:
            minimum: 1
            type: integer
            format: int32
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Orders"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  /v0.1/orders/bids/byMaker:
    get:
      tags:
        - order-controller
      operationId: getOrderBidsByMaker
      parameters:
        - name: platform
          in: query
          required: false
          schema:
            "$ref": "#/components/schemas/Platform"
        - name: "maker"
          in: query
          required: true
          schema:
            type: string
        - name: "origin"
          in: query
          required: false
          schema:
            type: string
        - name: "continuation"
          in: query
          required: false
          schema:
            type: string
        - name: "size"
          in: query
          required: false
          schema:
            minimum: 1
            type: integer
            format: int32
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Orders"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  /v0.1/orders/bids/byItem:
    get:
      tags:
        - order-controller
      operationId: getOrderBidsByItem
      parameters:
        - name: platform
          in: query
          required: false
          schema:
            "$ref": "#/components/schemas/Platform"
        - name: "contract"
          in: query
          required: true
          schema:
            type: string
        - name: "tokenId"
          in: query
          required: true
          schema:
            $ref: "#/components/schemas/BigInteger"
        - name: "maker"
          in: query
          required: false
          schema:
            type: string
        - name: "origin"
          in: query
          required: false
          schema:
            type: string
        - name: "continuation"
          in: query
          required: false
          schema:
            type: string
        - name: "size"
          in: query
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Orders"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  ######################## Activity API ########################

  /v0.1/activities/byUser:
    get:
      tags:
        - activity-controller
      operationId: getActivitiesByUser
      parameters:
        - name: "type"
          in: query
          required: true
          schema:
            type: "array"
            items:
              $ref: "#/components/schemas/UserActivityType"
        - name: "user"
          in: query
          required: true
          schema:
            type: array
            items:
              type: string
        - name: "from"
          in: query
          required: false
          schema:
            type: string
            format: "date-time"
        - name: "to"
          in: query
          required: false
          schema:
            type: string
            format: "date-time"
        - name: "continuation"
          in: query
          required: false
          schema:
            type: string
        - name: "size"
          in: query
          required: false
          schema:
            type: integer
        - name: sort
          in: query
          required: false
          schema:
            "$ref": "#/components/schemas/ActivitySort"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Activities"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  /v0.1/activities/byItem:
    get:
      tags:
        - activity-controller
      operationId: getActivitiesByItem
      parameters:
        - name: "type"
          in: query
          required: true
          schema:
            type: "array"
            items:
              $ref: "#/components/schemas/ActivityType"
        - name: "contract"
          in: query
          required: true
          schema:
            type: string
        - name: "tokenId"
          in: query
          required: true
          schema:
            $ref: "#/components/schemas/BigInteger"
        - name: "continuation"
          in: query
          required: false
          schema:
            type: string
        - name: "size"
          in: query
          required: false
          schema:
            type: integer
        - name: sort
          in: query
          required: false
          schema:
            "$ref": "#/components/schemas/ActivitySort"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Activities"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  /v0.1/activities/byCollection:
    get:
      tags:
        - activity-controller
      operationId: getActivitiesByCollection
      parameters:
        - name: "type"
          in: query
          required: true
          schema:
            type: "array"
            items:
              $ref: "#/components/schemas/ActivityType"
        - name: "collection"
          in: query
          required: true
          schema:
            type: string
        - name: "continuation"
          in: query
          required: false
          schema:
            type: string
        - name: "size"
          in: query
          required: false
          schema:
            type: integer
        - name: sort
          in: query
          required: false
          schema:
            "$ref": "#/components/schemas/ActivitySort"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Activities"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  /v0.1/activities/all:
    get:
      tags:
        - activity-controller
      operationId: getAllActivities
      parameters:
        - name: "blockchains"
          in: query
          required: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Blockchain"
        - name: "type"
          in: query
          required: true
          schema:
            type: "array"
            items:
              $ref: "#/components/schemas/ActivityType"
        - name: "continuation"
          in: query
          required: false
          schema:
            type: string
        - name: "size"
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          required: false
          schema:
            "$ref": "#/components/schemas/ActivitySort"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Activities"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  ####################### Collection API #######################

  /v0.1/collections/{collection}:
    get:
      tags:
        - collection-controller
      description: "Returns Collection by address"
      operationId: getCollectionById
      parameters:
        - name: "collection"
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Collection"
        '404':
          $ref: "#/components/responses/EntityNotFound"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  /v0.1/collections/byOwner:
    get:
      tags:
        - collection-controller
      operationId: getCollectionsByOwner
      parameters:
        - name: "owner"
          in: query
          description: "owner of searching collections"
          required: true
          schema:
            type: string
        - name: "continuation"
          in: query
          required: false
          schema:
            type: string
        - name: "size"
          in: query
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Collections"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  /v0.1/collections/all:
    get:
      tags:
        - collection-controller
      operationId: getAllCollections
      parameters:
        - name: "blockchains"
          in: query
          required: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Blockchain"
        - name: "continuation"
          in: query
          required: false
          schema:
            type: string
        - name: "size"
          in: query
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Collections"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

components:
  responses:
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/UnionApiErrorBadRequest"
    ServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/UnionApiErrorServerError"
    EntityNotFound:
      description: Not Found
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/UnionApiErrorEntityNotFound"
