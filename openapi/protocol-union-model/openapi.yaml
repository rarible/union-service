openapi: 3.0.3
info:
paths:

components:
  schemas:

    Platform:
      type: string
      enum:
        - ALL
        - RARIBLE
        - OPEN_SEA

    Blockchain:
      type: string
      enum:
        - ETHEREUM
        - POLYGON
        - FLOW

    #################### Sign - Union ####################

    UnionSignatureValidationForm:
      required:
        - signer
        - message
        - signature
      type: object
      properties:
        signer:
          type: string
        message:
          type: string
        signature:
          type: string

    #################### Meta - Union ####################

    UnionMeta:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        attributes:
          type: array
          default: [ ]
          items:
            $ref: "#/components/schemas/UnionMetaAttribute"
        contents:
          type: array
          default: [ ]
          items:
            $ref: "#/components/schemas/UnionMetaContent"
        raw:
          type: string
      required:
        - name
        - attributes
        - contents

    UnionMetaContent:
      type: object
      properties:
        typeContent:
          type: string
        url:
          type: string
        attributes:
          type: array
          default: [ ]
          items:
            $ref: "#/components/schemas/UnionMetaAttribute"
      required:
        - typeContent
        - url
        - attributes

    UnionMetaAttribute:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
      required:
        - key
        - value

    #################### Item - Union ####################

    UnionItemId:
      type: object
      properties:
        value:
          type: string
          example: "${blockchain}:${token}:${tokenId}"
        blockchain:
          $ref: "#/components/schemas/UnionBlockchain"
        token:
          $ref: "#/components/schemas/UnionAddress"
        tokenId:
          $ref: "#/components/schemas/BigInteger"
      required:
        - value
        - blockchain
        - token
        - tokenId

    UnionItem:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/UnionItemId"
        tokenId:
          $ref: "#/components/schemas/BigInteger"
        collection:
          $ref: "#/components/schemas/UnionAddress"
        creators:
          type: array
          default: [ ]
          items:
            $ref: "#/components/schemas/UnionCreator"
        owners:
          type: array
          default: [ ]
          items:
            $ref: "#/components/schemas/UnionAddress"
        royalties:
          type: array
          default: [ ]
          items:
            $ref: "#/components/schemas/UnionRoyalty"
        lazySupply:
          $ref: "#/components/schemas/BigInteger"
        pending:
          type: array
          default: [ ]
          items:
            $ref: "#/components/schemas/UnionItemTransfer"
        mintedAt:
          type: string
          format: date-time
        lastUpdatedAt:
          type: string
          format: date-time
        supply:
          $ref: "#/components/schemas/BigInteger"
        metaUrl:
          type: string
          example: "ipfs://ipfs/QmPe1W8XiUYdsvdpvgWVwekQ7cDQivRMak3YPX15vxvSJs"
        meta:
          $ref: "#/components/schemas/UnionMeta"
        deleted:
          type: boolean
      required:
        - id
        - tokenId
        - collection
        - creators
        - owners
        - royalties
        - lazySupply
        - pending
        - mintedAt
        - lastUpdatedAt
        - supply
        - deleted

    UnionItems:
      type: object
      properties:
        total:
          type: integer
          format: int64
          description: "Number of items were found by request"
        continuation:
          type: string
          description: "Continuation token to paginate items search result"
        items:
          type: array
          description: "List of found items"
          default: [ ]
          items:
            $ref: "#/components/schemas/UnionItem"
      required:
        - total
        - items

    UnionItemEvent:
      type: object
      properties:
        eventId:
          type: string
      required:
        - eventId
      oneOf:
        - $ref: "#/components/schemas/EthItemEvent"
        - $ref: "#/components/schemas/FlowItemEvent"

    #################### Ownership - Union ####################

    UnionOwnershipId:
      type: object
      properties:
        value:
          type: string
          example: "${blockchain}:${token}:${tokenId}:${owner}"
        blockchain:
          $ref: "#/components/schemas/UnionBlockchain"
        token:
          $ref: "#/components/schemas/UnionAddress"
        tokenId:
          $ref: "#/components/schemas/BigInteger"
        owner:
          $ref: "#/components/schemas/UnionAddress"
      required:
        - value
        - blockchain
        - token
        - tokenId
        - owner

    UnionOwnership:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/UnionOwnershipId"
        value:
          $ref: "#/components/schemas/BigInteger"
        createdAt:
          type: string
          format: "date-time"
        contract:
          $ref: "#/components/schemas/UnionAddress"
        tokenId:
          $ref: "#/components/schemas/BigInteger"
        owner:
          $ref: "#/components/schemas/UnionAddress"
        creators:
          type: array
          default: [ ]
          items:
            $ref: "#/components/schemas/UnionCreator"
        lazyValue:
          $ref: "#/components/schemas/BigInteger"
        pending:
          type: array
          default: [ ]
          items:
            $ref: "#/components/schemas/UnionItemHistory"
      required:
        - id
        - value
        - createdAt
        - contract
        - tokenId
        - owner
        - creators
        - lazyValue
        - pending

    UnionItemHistory:
      type: object
      properties:
        owner:
          "$ref": "#/components/schemas/UnionAddress"
        contract:
          "$ref": "#/components/schemas/UnionAddress"
        tokenId:
          "$ref": "#/components/schemas/BigInteger"
        value:
          "$ref": "#/components/schemas/BigInteger"
        date:
          type: string
          format: date-time
      description: History of item
      required:
        - contract
        - tokenId
        - date
      oneOf:
        - "$ref": "#/components/schemas/UnionItemRoyalty"
        - "$ref": "#/components/schemas/UnionItemTransfer"

    UnionItemRoyalty:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - ROYALTY
        royalties:
          type: array
          default: [ ]
          items:
            "$ref": "#/components/schemas/UnionRoyalty"
      required:
        - "@type"
        - royalties

    UnionItemTransfer:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - TRANSFER
        from:
          "$ref": "#/components/schemas/UnionAddress"
      required:
        - "@type"
        - owner
        - value
        - from

    UnionRoyalty:
      type: object
      required:
        - account
        - value
      properties:
        account:
          $ref: "#/components/schemas/UnionAddress"
        value:
          $ref: "#/components/schemas/BigDecimal"

    UnionCreator:
      type: object
      properties:
        account:
          $ref: "#/components/schemas/UnionAddress"
        value:
          $ref: "#/components/schemas/BigDecimal"
      required:
        - account
        - value

    UnionOwnerships:
      type: object
      properties:
        total:
          type: integer
          format: int64
          description: "Number of ownerships were found by request"
        continuation:
          type: string
          description: "Continuation token to paginate Ownerships search result"
        ownerships:
          type: array
          default: [ ]
          description: "List of found ownerships"
          items:
            $ref: "#/components/schemas/UnionOwnership"
      required:
        - total
        - ownerships

    UnionOwnershipEvent:
      type: object
      properties:
        eventId:
          type: string
      required:
        - eventId
      oneOf:
        - $ref: "#/components/schemas/EthOwnershipEvent"
        - $ref: "#/components/schemas/FlowOwnershipEvent"

    #################### Order - Union ####################

    UnionOrderId:
      type: object
      example: "${blockchain}:${id}"

    UnionOrder:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/UnionOrderId"
        fill:
          $ref: "#/components/schemas/BigInteger"
        startedAt:
          type: string
          format: "date-time"
        endedAt:
          type: string
          format: "date-time"
        makeStock:
          $ref: "#/components/schemas/BigInteger"
        cancelled:
          type: "boolean"
        createdAt:
          type: string
          format: "date-time"
        lastUpdatedAt:
          type: string
          format: "date-time"
        makePriceUsd:
          $ref: "#/components/schemas/BigDecimal"
        takePriceUsd:
          $ref: "#/components/schemas/BigDecimal"
        priceHistory:
          type: array
          default: [ ]
          items:
            $ref: "#/components/schemas/UnionOrderPriceHistoryRecord"
      oneOf:
        - $ref: "#/components/schemas/EthOrder"
        - $ref: "#/components/schemas/FlowOrder"
      required:
        - id
        - fill
        - makeStock
        - cancelled
        - createdAt
        - lastUpdatedAt
        - priceHistory

    UnionOrderPriceHistoryRecord:
      type: object
      required:
        - date
        - makeValue
        - takeValue
      properties:
        date:
          type: string
          format: date-time
        makeValue:
          $ref: "#/components/schemas/BigDecimal"
        takeValue:
          $ref: "#/components/schemas/BigDecimal"

    UnionOrders:
      type: object
      properties:
        continuation:
          type: string
          description: "Continuation token to paginate Ownerships search result"
        orders:
          type: array
          description: "List of found orders"
          default: [ ]
          items:
            $ref: "#/components/schemas/UnionOrder"
      required:
        - total
        - orders

    UnionOrderEvent:
      type: object
      properties:
        eventId:
          type: string
      required:
        - eventId
      oneOf:
        - "$ref": "#/components/schemas/EthOrderEvent"
        - "$ref": "#/components/schemas/FlowOrderEvent"

    #################### Activity - Union ####################

    UnionActivityId:
      type: object
      example: "${blockchain}:${id}"

    UnionActivitySort:
      type: string
      enum:
        - LATEST_FIRST
        - EARLIEST_FIRST

    UnionActivityType:
      type: string
      enum:
        - TRANSFER
        - MINT
        - BURN
        - BID
        - LIST
        - SELL

    UnionUserActivityType:
      type: string
      enum:
        - TRANSFER_FROM
        - TRANSFER_TO
        - MINT
        - BURN
        - MAKE_BID
        - GET_BID
        - LIST
        - BUY
        - SELL

    UnionActivity:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/UnionActivityId"
        date:
          type: string
          format: "date-time"
      oneOf:
        - $ref: "#/components/schemas/EthActivity"
        - $ref: "#/components/schemas/FlowActivity"
      required:
        - id
        - date

    UnionActivities:
      type: object
      properties:
        continuation:
          type: string
          description: "Continuation token to paginate Ownerships search result"
        activities:
          type: array
          default: [ ]
          description: "List of found activities"
          items:
            $ref: "#/components/schemas/UnionActivity"
      required:
        - total
        - activities

    UnionCollection:
      type: object
      properties:
        name:
          type: string
        symbol:
          type: string
      oneOf:
        - $ref: "#/components/schemas/EthCollection"
        - $ref: "#/components/schemas/FlowCollection"
      required:
        - name

    UnionCollections:
      type: object
      properties:
        total:
          type: integer
          format: int64
          description: "Number of ownerships were found by request"
        continuation:
          type: string
          description: "Continuation token to paginate Ownerships search result"
        collections:
          default: [ ]
          type: array
          items:
            $ref: "#/components/schemas/UnionCollection"
      required:
        - total
        - collections

    ActivityBlockchainInfo:
      type: object
      properties:
        transactionHash:
          type: string
        blockHash:
          type: string
        blockNumber:
          type: integer
          format: int64
        logIndex:
          type: integer
      required:
        - transactionHash
        - blockHash
        - blockNumber
        - logIndex

    #################### Union - Errors ####################

    UnionApiErrorEntityNotFound:
      required:
        - code
        - message
      type: object
      properties:
        code:
          type: string
          enum:
            - NOT_FOUND
          default: NOT_FOUND
        message:
          type: string

    UnionApiErrorBadRequest:
      required:
        - code
        - message
      type: object
      properties:
        code:
          type: string
          enum:
            - BAD_REQUEST
            - VALIDATION
          default: BAD_REQUEST
        message:
          type: string

    UnionApiErrorServerError:
      required:
        - code
        - message
      type: object
      properties:
        code:
          type: string
          enum:
            - UNKNOWN
          default: UNKNOWN
        message:
          type: string

    #################### Item - Eth ####################

    EthItemEvent:
      properties:
        itemId:
          $ref: "#/components/schemas/UnionItemId"
      required:
        - "@type"
        - itemId
      oneOf:
        - $ref: "#/components/schemas/EthItemUpdateEvent"
        - $ref: "#/components/schemas/EthItemDeleteEvent"

    EthItemUpdateEvent:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - ETHEREUM_UPDATE
        item:
          $ref: "#/components/schemas/UnionItem"
      required:
        - "@type"
        - item

    EthItemDeleteEvent:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - ETHEREUM_DELETE
      required:
        - "@type"
        - itemId

    #################### Ownership - Eth ####################

    EthOwnershipEvent:
      properties:
        "@type":
          type: string
          enum:
            - ETHEREUM
        ownershipId:
          $ref: "#/components/schemas/UnionOwnershipId"
      required:
        - "@type"
        - ownershipId
      oneOf:
        - $ref: "#/components/schemas/EthOwnershipUpdateEvent"
        - $ref: "#/components/schemas/EthOwnershipDeleteEvent"

    EthOwnershipUpdateEvent:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - ETHEREUM_UPDATE
        ownership:
          $ref: "#/components/schemas/UnionOwnership"
      required:
        - "@type"
        - ownership

    EthOwnershipDeleteEvent:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - ETHEREUM_DELETE
      required:
        - "@type"

    #################### Order - Eth ####################

    EthOrder:
      type: object
      properties:
        maker:
          $ref: "#/components/schemas/UnionAddress"
        taker:
          $ref: "#/components/schemas/UnionAddress"
        make:
          $ref: "#/components/schemas/EthAsset"
        take:
          $ref: "#/components/schemas/EthAsset"
        salt:
          type: string
        signature:
          type: string
        pending:
          type: array
          default: [ ]
          items:
            $ref: "#/components/schemas/EthPendingOrder"
      required:
        - type
        - maker
        - make
        - take
        - salt
        - data
      oneOf:
        - "$ref": "#/components/schemas/EthLegacyOrder"
        - "$ref": "#/components/schemas/EthRaribleV2Order"
        - "$ref": "#/components/schemas/EthOpenSeaV1Order"
        - "$ref": "#/components/schemas/EthCryptoPunksOrder"

    EthLegacyOrder:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - ETH_RARIBLE_V1
        data:
          $ref: "#/components/schemas/EthOrderDataLegacy"
      required:
        - "@type"
        - data

    EthRaribleV2Order:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - ETH_RARIBLE_V2
        data:
          $ref: "#/components/schemas/EthOrderDataRaribleV2DataV1"
      required:
        - "@type"
        - data

    EthOpenSeaV1Order:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - ETH_OPEN_SEA_V1
        data:
          $ref: "#/components/schemas/EthOrderOpenSeaV1DataV1"
      required:
        - "@type"
        - data

    EthCryptoPunksOrder:
      type: object
      required:
        - "@type"
        - data
      properties:
        "@type":
          type: string
          enum:
            - ETH_CRYPTO_PUNKS
        data:
          $ref: "#/components/schemas/EthOrderCryptoPunksData"

    EthOrderDataLegacy:
      type: object
      properties:
        fee:
          $ref: "#/components/schemas/BigInteger"
      required:
        - fee

    EthOrderDataRaribleV2DataV1:
      type: object
      properties:
        payouts:
          type: array
          default: [ ]
          items:
            $ref: "#/components/schemas/EthOrderPayout"
        originFees:
          type: array
          default: [ ]
          items:
            $ref: "#/components/schemas/EthOrderPayout"
      required:
        - payouts
        - originFees

    EthOrderOpenSeaV1DataV1:
      type: object
      properties:
        exchange:
          $ref: "#/components/schemas/UnionAddress"
        makerRelayerFee:
          $ref: "#/components/schemas/BigInteger"
        takerRelayerFee:
          $ref: "#/components/schemas/BigInteger"
        makerProtocolFee:
          $ref: "#/components/schemas/BigInteger"
        takerProtocolFee:
          $ref: "#/components/schemas/BigInteger"
        feeRecipient:
          $ref: "#/components/schemas/UnionAddress"
        feeMethod:
          type: string
          enum:
            - PROTOCOL_FEE
            - SPLIT_FEE
        side:
          type: string
          enum:
            - BUY
            - SELL
        saleKind:
          type: string
          enum:
            - FIXED_PRICE
            - DUTCH_AUCTION
        howToCall:
          type: string
          enum:
            - CALL
            - DELEGATE_CALL
        callData:
          type: string
        replacementPattern:
          type: string
        staticTarget:
          $ref: "#/components/schemas/UnionAddress"
        staticExtraData:
          type: string
        extra:
          $ref: "#/components/schemas/BigInteger"
      required:
        - dataType
        - exchange
        - makerRelayerFee
        - takerRelayerFee
        - makerProtocolFee
        - takerProtocolFee
        - feeRecipient
        - feeMethod
        - side
        - saleKind
        - howToCall
        - callData
        - replacementPattern
        - staticTarget
        - staticExtraData
        - extra

    EthOrderCryptoPunksData:
      type: object
      properties:
        stub:
          type: string
          default: "STUB"

    EthPendingOrder:
      type: object
      required:
        - id
        - date
      properties:
        id:
          $ref: "#/components/schemas/UnionOrderId"
        make:
          $ref: "#/components/schemas/EthAsset"
        take:
          $ref: "#/components/schemas/EthAsset"
        date:
          type: string
          format: date-time
        maker:
          $ref: "#/components/schemas/UnionAddress"
      oneOf:
        - $ref: "#/components/schemas/EthPendingOrderCancel"
        - $ref: "#/components/schemas/EthPendingOrderMatch"
        - $ref: "#/components/schemas/EthOnChainOrder"

    EthPendingOrderMatch:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - ORDER_SIDE_MATCH
        side:
          type: string
          enum:
            - LEFT
            - RIGHT
        fill:
          $ref: "#/components/schemas/BigInteger"
        taker:
          $ref: "#/components/schemas/UnionAddress"
        counterHash:
          type: string
        makeUsd:
          $ref: "#/components/schemas/BigDecimal"
        takeUsd:
          $ref: "#/components/schemas/BigDecimal"
        makePriceUsd:
          $ref: "#/components/schemas/BigDecimal"
        takePriceUsd:
          $ref: "#/components/schemas/BigDecimal"
      required:
        - "@type"
        - fill

    EthPendingOrderCancel:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - CANCEL
        owner:
          $ref: "#/components/schemas/UnionAddress"
      required:
        - "@type"

    EthOnChainOrder:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - ON_CHAIN_ORDER
      required:
        - "@type"

    EthOrderPayout:
      type: object
      properties:
        account:
          $ref: "#/components/schemas/UnionAddress"
        value:
          $ref: "#/components/schemas/BigInteger"
      required:
        - account
        - value

    EthAsset:
      type: object
      properties:
        type:
          $ref: "#/components/schemas/EthAssetType"
        value:
          $ref: "#/components/schemas/BigInteger"
      required:
        - type
        - value

    EthAssetType:
      type: object
      oneOf:
        - $ref: "#/components/schemas/EthEthereumAssetType"
        - $ref: "#/components/schemas/EthErc20AssetType"
        - $ref: "#/components/schemas/EthErc721AssetType"
        - $ref: "#/components/schemas/EthErc721LazyAssetType"
        - $ref: "#/components/schemas/EthErc1155AssetType"
        - $ref: "#/components/schemas/EthErc1155LazyAssetType"
        - $ref: "#/components/schemas/EthCryptoPunksAssetType"
        - $ref: "#/components/schemas/EthGenerativeArtAssetType"

    EthEthereumAssetType:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - ETH
      required:
        - "@type"

    EthErc20AssetType:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - ERC20
        contract:
          $ref: "#/components/schemas/UnionAddress"
      required:
        - "@type"
        - contract

    EthErc721AssetType:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - ERC721
        contract:
          $ref: "#/components/schemas/UnionAddress"
        tokenId:
          $ref: "#/components/schemas/BigInteger"
      required:
        - "@type"
        - contract
        - tokenId

    EthErc721LazyAssetType:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - ERC721_Lazy
        contract:
          $ref: "#/components/schemas/UnionAddress"
        tokenId:
          $ref: "#/components/schemas/BigInteger"
        uri:
          type: string
        creators:
          type: array
          default: [ ]
          items:
            $ref: "#/components/schemas/UnionCreator"
        royalties:
          type: array
          default: [ ]
          items:
            $ref: "#/components/schemas/UnionRoyalty"
        signatures:
          type: array
          default: [ ]
          items:
            type: string
      required:
        - "@type"
        - contract
        - tokenId
        - uri
        - creators
        - royalties
        - signatures

    EthErc1155AssetType:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - ERC1155
        contract:
          $ref: "#/components/schemas/UnionAddress"
        tokenId:
          $ref: "#/components/schemas/BigInteger"
      required:
        - "@type"
        - contract
        - tokenId

    EthErc1155LazyAssetType:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - ERC1155_Lazy
        contract:
          $ref: "#/components/schemas/UnionAddress"
        tokenId:
          $ref: "#/components/schemas/BigInteger"
        uri:
          type: string
        supply:
          $ref: "#/components/schemas/BigInteger"
        creators:
          type: array
          default: [ ]
          items:
            $ref: "#/components/schemas/UnionCreator"
        royalties:
          type: array
          default: [ ]
          items:
            $ref: "#/components/schemas/UnionRoyalty"
        signatures:
          type: array
          default: [ ]
          items:
            type: string
      required:
        - "@type"
        - contract
        - tokenId
        - uri
        - creators
        - royalties
        - signatures

    EthCryptoPunksAssetType:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - "CRYPTO_PUNKS"
        contract:
          $ref: "#/components/schemas/UnionAddress"
        punkId:
          type: integer
      required:
        - "@type"
        - contract
        - punkId

    EthGenerativeArtAssetType:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - "GEN_ART"
        contract:
          $ref: "#/components/schemas/UnionAddress"
      required:
        - "@type"
        - contract

    #################### Activity - Eth ####################

    EthActivity:
      type: object
      oneOf:
        - $ref: "#/components/schemas/EthMintActivity"
        - $ref: "#/components/schemas/EthBurnActivity"
        - $ref: "#/components/schemas/EthTransferActivity"
        - $ref: "#/components/schemas/EthOrderMatchActivity"
        - $ref: "#/components/schemas/EthOrderBidActivity"
        - $ref: "#/components/schemas/EthOrderListActivity"
        - $ref: "#/components/schemas/EthOrderCancelBidActivity"
        - $ref: "#/components/schemas/EthOrderCancelListActivity"

    EthMintActivity:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - ETHEREUM_MINT
        owners:
          type: array
          default: [ ]
          items:
            $ref: "#/components/schemas/UnionAddress"
        contract:
          $ref: "#/components/schemas/UnionAddress"
        tokenId:
          $ref: "#/components/schemas/BigInteger"
        value:
          $ref: "#/components/schemas/BigInteger"
        blockchainInfo:
          $ref: "#/components/schemas/ActivityBlockchainInfo"
      required:
        - "@type"
        - owners
        - contract
        - tokenId
        - value
        - blockchainInfo

    EthBurnActivity:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - ETHEREUM_BURN
        owners:
          type: array
          default: [ ]
          items:
            $ref: "#/components/schemas/UnionAddress"
        contract:
          $ref: "#/components/schemas/UnionAddress"
        tokenId:
          $ref: "#/components/schemas/BigInteger"
        value:
          $ref: "#/components/schemas/BigInteger"
        blockchainInfo:
          $ref: "#/components/schemas/ActivityBlockchainInfo"
      required:
        - "@type"
        - owners
        - contract
        - tokenId
        - value
        - blockchainInfo

    EthTransferActivity:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - ETHEREUM_TRANSFER
        from:
          $ref: "#/components/schemas/UnionAddress"
        owners:
          type: array
          default: [ ]
          items:
            $ref: "#/components/schemas/UnionAddress"
        contract:
          $ref: "#/components/schemas/UnionAddress"
        tokenId:
          $ref: "#/components/schemas/BigInteger"
        value:
          $ref: "#/components/schemas/BigInteger"
        blockchainInfo:
          $ref: "#/components/schemas/ActivityBlockchainInfo"
      required:
        - "@type"
        - from
        - owners
        - contract
        - tokenId
        - value
        - blockchainInfo

    EthOrderActivityMatchSide:
      type: object
      properties:
        maker:
          $ref: "#/components/schemas/UnionAddress"
        hash:
          type: string
        asset:
          $ref: "#/components/schemas/EthAsset"
        type:
          type: string
          enum:
            - SELL
            - BID
      required:
        - maker
        - hash
        - asset
        - type

    EthOrderActivitySource:
      type: string
      enum:
        - RARIBLE
        - OPEN_SEA
        - CRYPTO_PUNKS

    EthOrderMatchActivity:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - ETHEREUM_MATCH
        left:
          $ref: "#/components/schemas/EthOrderActivityMatchSide"
        right:
          $ref: "#/components/schemas/EthOrderActivityMatchSide"
        price:
          $ref: "#/components/schemas/BigDecimal"
        priceUsd:
          $ref: "#/components/schemas/BigDecimal"
        source:
          $ref: "#/components/schemas/EthOrderActivitySource"
        blockchainInfo:
          $ref: "#/components/schemas/ActivityBlockchainInfo"
      required:
        - "@type"
        - left
        - right
        - price
        - source
        - blockchainInfo

    EthOrderBidActivity:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - ETHEREUM_BID
        hash:
          type: string
        maker:
          $ref: "#/components/schemas/UnionAddress"
        make:
          $ref: "#/components/schemas/EthAsset"
        take:
          $ref: "#/components/schemas/EthAsset"
        price:
          $ref: "#/components/schemas/BigDecimal"
        priceUsd:
          $ref: "#/components/schemas/BigDecimal"
        source:
          $ref: "#/components/schemas/EthOrderActivitySource"
      required:
        - "@type"
        - hash
        - maker
        - make
        - take
        - price
        - source

    EthOrderListActivity:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - ETHEREUM_LIST
        hash:
          type: string
        maker:
          $ref: "#/components/schemas/UnionAddress"
        make:
          $ref: "#/components/schemas/EthAsset"
        take:
          $ref: "#/components/schemas/EthAsset"
        price:
          $ref: "#/components/schemas/BigDecimal"
        priceUsd:
          $ref: "#/components/schemas/BigDecimal"
        source:
          $ref: "#/components/schemas/EthOrderActivitySource"
      required:
        - "@type"
        - hash
        - maker
        - make
        - take
        - price
        - source

    EthOrderCancelBidActivity:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - ETHEREUM_CANCEL_BID
        hash:
          type: string
        maker:
          $ref: "#/components/schemas/UnionAddress"
        make:
          $ref: "#/components/schemas/EthAssetType"
        take:
          $ref: "#/components/schemas/EthAssetType"
        source:
          $ref: "#/components/schemas/EthOrderActivitySource"
        blockchainInfo:
          $ref: "#/components/schemas/ActivityBlockchainInfo"
      required:
        - "@type"
        - hash
        - maker
        - make
        - take
        - source
        - blockchainInfo

    EthOrderCancelListActivity:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - ETHEREUM_CANCEL_LIST
        hash:
          type: string
        maker:
          $ref: "#/components/schemas/UnionAddress"
        make:
          $ref: "#/components/schemas/EthAssetType"
        take:
          $ref: "#/components/schemas/EthAssetType"
        source:
          $ref: "#/components/schemas/EthOrderActivitySource"
        blockchainInfo:
          $ref: "#/components/schemas/ActivityBlockchainInfo"
      required:
        - "@type"
        - hash
        - maker
        - make
        - take
        - source
        - blockchainInfo

    EthCollection:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - ETHEREUM
        id:
          $ref: "#/components/schemas/UnionAddress"
        type:
          type: string
          enum:
            - CRYPTO_PUNKS
            - ERC721
            - ERC1155
        supportsLazyMint:
          type: boolean
        owner:
          $ref: "#/components/schemas/UnionAddress"
        features:
          type: array
          default: [ ]
          items:
            type: string
            enum:
              - APPROVE_FOR_ALL
              - SET_URI_PREFIX
              - BURN
              - MINT_WITH_ADDRESS
              - SECONDARY_SALE_FEES
              - MINT_AND_TRANSFER
      required:
        - "@type"
        - id
        - type
        - supportsLazyMint
        - features

    EthOrderEvent:
      type: object
      properties:
        orderId:
          "$ref": "#/components/schemas/UnionOrderId"
      required:
        - orderId
      oneOf:
        - "$ref": "#/components/schemas/EthOrderUpdateEvent"

    EthOrderUpdateEvent:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - ETHEREUM_UPDATE
        order:
          "$ref": "#/components/schemas/EthOrder"
      required:
        - "@type"
        - order

    #################### Item - Flow ####################

    FlowItemEvent:
      properties:
        itemId:
          $ref: "#/components/schemas/UnionItemId"
      required:
        - "@type"
        - itemId
      oneOf:
        - $ref: "#/components/schemas/FlowItemUpdateEvent"
        - $ref: "#/components/schemas/FlowItemDeleteEvent"

    FlowItemUpdateEvent:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - FLOW_UPDATE
        item:
          $ref: "#/components/schemas/UnionItem"
      required:
        - "@type"
        - item

    FlowItemDeleteEvent:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - FLOW_DELETE
      required:
        - "@type"
        - itemId

    #################### Ownership - Flow ####################

    FlowOwnershipEvent:
      properties:
        eventId:
          type: string
        ownershipId:
          $ref: "#/components/schemas/UnionOwnershipId"
      required:
        - "@type"
        - eventId
        - ownershipId
      oneOf:
        - $ref: "#/components/schemas/FlowOwnershipUpdateEvent"
        - $ref: "#/components/schemas/FlowOwnershipDeleteEvent"

    FlowOwnershipUpdateEvent:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - FLOW_UPDATE
        ownership:
          $ref: "#/components/schemas/UnionOwnership"
      required:
        - "@type"
        - ownership

    FlowOwnershipDeleteEvent:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - FLOW_DELETE
      required:
        - "@type"

    #################### Order - Flow ####################

    FlowOrder:
      oneOf:
        - $ref: "#/components/schemas/FlowOrderV1"

    FlowOrderV1:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - FLOW_RARIBLE_V1
        maker:
          $ref: "#/components/schemas/UnionAddress"
        taker:
          $ref: "#/components/schemas/UnionAddress"
        make:
          $ref: "#/components/schemas/FlowAsset"
        take:
          $ref: "#/components/schemas/FlowAsset"
        data:
          $ref: "#/components/schemas/FlowOrderDataV1"
      required:
        - "@type"
        - maker
        - make
        - take
        - data

    FlowOrderDataV1:
      type: object
      properties:
        payouts:
          type: array
          default: [ ]
          items:
            $ref: "#/components/schemas/FlowOrderPayout"
        originFees:
          type: array
          default: [ ]
          items:
            $ref: "#/components/schemas/FlowOrderPayout"
      required:
        - payouts
        - originFees

    FlowOrderPayout:
      type: object
      properties:
        account:
          $ref: "#/components/schemas/UnionAddress"
        value:
          $ref: "#/components/schemas/BigInteger"
      required:
        - account
        - value

    FlowAsset:
      type: object
      properties:
        type:
          $ref: "#/components/schemas/FlowAssetType"
        value:
          $ref: "#/components/schemas/BigInteger"
      required:
        - type
        - value

    FlowAssetType:
      type: object
      properties:
        contract:
          $ref: "#/components/schemas/UnionAddress"
      required:
        - contract
      oneOf:
        - $ref: "#/components/schemas/FlowAssetTypeNft"
        - $ref: "#/components/schemas/FlowAssetTypeFt"

    FlowAssetTypeNft:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - FLOW_NFT
        tokenId:
          $ref: "#/components/schemas/BigInteger"
      required:
        - "@type"

    FlowAssetTypeFt:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - FLOW_FT
      required:
        - "@type"

    FlowOrderEvent:
      type: object
      properties:
        orderId:
          "$ref": "#/components/schemas/UnionOrderId"
      required:
        - orderId
      oneOf:
        - "$ref": "#/components/schemas/FlowOrderUpdateEvent"

    FlowOrderUpdateEvent:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - FLOW_UPDATE
        order:
          "$ref": "#/components/schemas/FlowOrder"
      required:
        - "@type"
        - order

    #################### Activity - Flow ####################

    FlowActivity:
      type: object
      oneOf:
        - $ref: "#/components/schemas/FlowMintActivity"
        - $ref: "#/components/schemas/FlowBurnActivity"
        - $ref: "#/components/schemas/FlowTransferActivity"
        - $ref: "#/components/schemas/FlowOrderMatchActivity"
        - $ref: "#/components/schemas/FlowOrderListActivity"
        - $ref: "#/components/schemas/FlowOrderCancelListActivity"

    FlowMintActivity:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - FLOW_MINT
        owners:
          type: array
          default: [ ]
          items:
            $ref: "#/components/schemas/UnionAddress"
        contract:
          $ref: "#/components/schemas/UnionAddress"
        tokenId:
          $ref: "#/components/schemas/BigInteger"
        value:
          $ref: "#/components/schemas/BigInteger"
        blockchainInfo:
          $ref: "#/components/schemas/ActivityBlockchainInfo"
      required:
        - "@type"
        - owners
        - contract
        - tokenId
        - value
        - blockchainInfo

    FlowBurnActivity:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - FLOW_BURN
        owners:
          type: array
          default: [ ]
          items:
            $ref: "#/components/schemas/UnionAddress"
        contract:
          $ref: "#/components/schemas/UnionAddress"
        tokenId:
          $ref: "#/components/schemas/BigInteger"
        value:
          $ref: "#/components/schemas/BigInteger"
        blockchainInfo:
          $ref: "#/components/schemas/ActivityBlockchainInfo"
      required:
        - "@type"
        - owners
        - contract
        - tokenId
        - value
        - blockchainInfo

    FlowTransferActivity:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - FLOW_TRANSFER
        from:
          $ref: "#/components/schemas/UnionAddress"
        owners:
          type: array
          default: [ ]
          items:
            $ref: "#/components/schemas/UnionAddress"
        contract:
          $ref: "#/components/schemas/UnionAddress"
        tokenId:
          $ref: "#/components/schemas/BigInteger"
        value:
          $ref: "#/components/schemas/BigInteger"
        blockchainInfo:
          $ref: "#/components/schemas/ActivityBlockchainInfo"
      required:
        - "@type"
        - from
        - owner
        - contract
        - tokenId
        - value
        - blockchainInfo

    FlowOrderMatchActivity:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - FLOW_MATCH
        left:
          $ref: "#/components/schemas/FlowOrderActivityMatchSide"
        right:
          $ref: "#/components/schemas/FlowOrderActivityMatchSide"
        price:
          $ref: "#/components/schemas/BigDecimal"
        priceUsd:
          $ref: "#/components/schemas/BigDecimal"
        blockchainInfo:
          $ref: "#/components/schemas/ActivityBlockchainInfo"
      required:
        - "@type"
        - left
        - right
        - price
        - blockchainInfo

    FlowOrderListActivity:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - FLOW_LIST
        hash:
          type: string
        maker:
          $ref: "#/components/schemas/UnionAddress"
        make:
          $ref: "#/components/schemas/FlowAsset"
        take:
          $ref: "#/components/schemas/FlowAsset"
        price:
          $ref: "#/components/schemas/BigDecimal"
        priceUsd:
          $ref: "#/components/schemas/BigDecimal"
      required:
        - "@type"
        - hash
        - maker
        - make
        - take
        - price

    FlowOrderCancelListActivity:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - FLOW_CANCEL_LIST
        hash:
          type: string
        maker:
          $ref: "#/components/schemas/UnionAddress"
        make:
          $ref: "#/components/schemas/FlowAsset"
        take:
          $ref: "#/components/schemas/FlowAsset"
      required:
        - "@type"
        - hash
        - maker
        - make
        - take

    FlowOrderActivityMatchSide:
      type: object
      properties:
        maker:
          $ref: "#/components/schemas/UnionAddress"
        asset:
          $ref: "#/components/schemas/FlowAsset"
        type:
          type: string
          enum:
            - SELL
            - BID
      required:
        - maker
        - asset
        - type

    FlowCollection:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - FLOW
        id:
          $ref: "#/components/schemas/UnionAddress"
        owner:
          $ref: "#/components/schemas/UnionAddress"
      required:
        - "@type"
        - id
        - owner

    #################### Referenced Types ####################

    BigInteger:
      type: string
      example: 123456
    BigDecimal:
      type: string
      example: 123456.789

    UnionAddress:
      type: string
      example: "0x60f80121c31a0d46b5279700f9df786054aa5ee5"
    UnionBlockchain:
      type: string
      enum:
        - ETHEREUM
        - POLYGON
        - FLOW