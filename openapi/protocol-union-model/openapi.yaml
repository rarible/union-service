openapi: 3.0.3
info:
paths:

components:
  schemas:

################### TEST ######################
    Test:
      type: object
      properties:
        id:
          type: integer

    UnionItemEvent:
      required:
        - eventId
        - itemId
      properties:
        eventId:
          type: string
        itemId:
          type: string

    UnionOwnershipEvent:
      required:
        - eventId
        - ownershipId
      properties:
        eventId:
          type: string
        ownershipId:
          type: string

    UnionOrderEvent:
      required:
        - hash
      properties:
        hash:
          type: string

    #################### Meta - Union ####################

    Meta:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        attributes:
          type: array
          items:
            $ref: "#/components/schemas/MetaAttribute"
        contents:
          type: array
          items:
            $ref: "#/components/schemas/MetaContent"
        raw:
          $ref: "#/components/schemas/Binary"
      required:
        - name

    MetaContent:
      type: object
      properties:
        typeContent:
          type: string
        url:
          type: string
        attributes:
          type: array
          items:
            $ref: "#/components/schemas/MetaAttribute"
      required:
        - typeContent
        - url

    MetaAttribute:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
      required:
        - key
        - value

    #################### Item - Union ####################

    Item:
      type: object
      properties:
        mintedAt:
          type: string
          format: date-time
        lastUpdatedAt:
          type: string
          format: date-time
        supply:
          type: number
          format: biginteger
        metaURL:
          type: string
          example: "ipfs://ipfs/QmPe1W8XiUYdsvdpvgWVwekQ7cDQivRMak3YPX15vxvSJs"
        meta:
          $ref: "#/components/schemas/Meta"
        deleted:
          type: boolean
      oneOf:
        - $ref: "#/components/schemas/EthItem"
        - $ref: "#/components/schemas/FlowItem"
      required:
        - mintedAt
        - lastUpdatedAt
        - supply
        - deleted

    Items:
      type: object
      properties:
        total:
          type: integer
          format: int64
          description: "Number of items were found by request"
        continuation:
          type: string
          description: "Continuation token to paginate items search result"
        items:
          type: array
          description: "List of found items"
          items:
            $ref: "#/components/schemas/Item"
      required:
        - "total"
        - "items"

    #################### Item - Eth ####################

    EthItem:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - ETHEREUM
        blockchain:
          $ref: "#/components/schemas/EthBlockchain"
        id:
          $ref: "#/components/schemas/EthItemId"
        tokenId:
          type: number
          format: biginteger
        collection:
          $ref: "#/components/schemas/EthAddress"
        creators:
          type: array
          items:
            $ref: "#/components/schemas/EthCreator"
        owners:
          type: array
          items:
            $ref: "#/components/schemas/EthAddress"
        royalties:
          type: array
          items:
            $ref: "#/components/schemas/EthRoyalty"
        lazySupply:
          type: number
          format: biginteger
        pending:
          type: array
          items:
            $ref: "#/components/schemas/EthPendingItem"
      required:
        - "blockchain"
        - "id"
        - "tokenId"
        - "collection"
        - "creators"
        - "owners"
        - "royalties"
        - "lazySupply"

    EthRoyalty:
      type: object
      properties:
        account:
          $ref: "#/components/schemas/EthAddress"
        value:
          type: number
          format: biginteger

    EthCreator:
      type: object
      properties:
        account:
          $ref: "#/components/schemas/EthAddress"
        value:
          type: number
          format: bigdecimal
      required:
        - "account"
        - "value"

    EthPendingItem:
      type: object
      properties:
        type:
          type: string
          enum:
            - "TRANSFER"
        from:
          $ref: "#/components/schemas/EthAddress"
      required:
        - "type"
        - "from"

    #################### Ownership - Eth ####################

    EthOwnership:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/EthOwnershipId"
        contract:
          $ref: "#/components/schemas/EthAddress"
        tokenId:
          type: number
          format: biginteger
        owner:
          type: array
          items:
            $ref: "#/components/schemas/EthAddress"
        creators:
          type: array
          items:
            $ref: "#/components/schemas/EthCreator"
        lazyValue:
          type: number
          format: biginteger
        pending:
          type: array
          items:
            $ref: "#/components/schemas/EthPendingOwnership"
      required:
        - id
        - contract
        - tokenId
        - owner
        - creators
        - lazyValue
        - pending

    EthPendingOwnership:
      type: object
      oneOf:
        - $ref: "#/components/schemas/EthPendingOwnershipTransfer"
        - $ref: "#/components/schemas/EthPendingOwnershipRoyalty"

    EthPendingOwnershipTransfer:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - TRANSFER
        from:
          $ref: "#/components/schemas/EthAddress"
      required:
        - "@type"
        - from

    EthPendingOwnershipRoyalty:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - ROYALTY
        from:
          type: array
          items:
            $ref: "#/components/schemas/EthRoyalty"
      required:
        - "@type"
        - from

    #################### Order - Eth ####################

    EthOrder:
      type: object
      properties:
        type:
          $ref: "#/components/schemas/EthOrderType"
        maker:
          $ref: "#/components/schemas/EthAddress"
        taker:
          $ref: "#/components/schemas/EthAddress"
        make:
          $ref: "#/components/schemas/EthAsset"
        take:
          $ref: "#/components/schemas/EthAsset"
        salt:
          $ref: "#/components/schemas/Binary"
        data:
          $ref: "#/components/schemas/EthOrderData"
        signature:
          $ref: "#/components/schemas/Binary"
        pending:
          type: array
          items:
            $ref: "#/components/schemas/EthPendingOrder"
        hash:
          $ref: "#/components/schemas/Word"
      required:
        - type
        - maker
        - make
        - take
        - salt
        - data
        - hash

    EthOrderType:
      type: string
      enum:
        - RARIBLE_V1
        - RARIBLE_V2

    EthPendingOrder:
      type: object
      oneOf:
        - $ref: "#/components/schemas/EthPendingOrderCancel"
        - $ref: "#/components/schemas/EthPendingOrderMatch"

    EthPendingOrderCancel:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - CANCEL
        owner:
          $ref: "#/components/schemas/EthAddress"
      required:
        - "@type"

    EthPendingOrderMatch:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - ORDER_SIDE_MATCH
        side:
          type: string
          enum:
            - LEFT
            - RIGHT
        fill:
          type: number
          format: biginteger
        taker:
          $ref: "#/components/schemas/EthAddress"
        counterHash:
          type: string
        makeUSD:
          type: number
          format: biginteger
        takeUSD:
          type: number
          format: biginteger
        makePriceUSD:
          type: number
          format: biginteger
        takePriceUSD:
          type: number
          format: biginteger
      required:
        - "@type"
        - fill

    EthOrderData:
      type: object
      oneOf:
        - $ref: "#/components/schemas/EthOrderDataLegacy"
        - $ref: "#/components/schemas/EthOrderDataRaribleV2DataV1"

    EthOrderDataRaribleV2DataV1:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - RARIBLE_V2_DATA_V1
        payouts:
          type: array
          items:
            $ref: "#/components/schemas/EthOrderPayout"
        originFees:
          type: array
          items:
            $ref: "#/components/schemas/EthOrderOriginFee"
      required:
        - "@type"
        - payouts
        - originFees

    EthOrderDataLegacy:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - LEGACY
        fee:
          type: number
          format: biginteger
      required:
        - "@type"
        - fee

    EthOrderPayout:
      type: object
      properties:
        account:
          $ref: "#/components/schemas/EthAddress"
        value:
          type: number
          format: biginteger
      required:
        - account
        - value

    EthOrderOriginFee:
      type: object
      properties:
        account:
          $ref: "#/components/schemas/EthAddress"
        value:
          type: number
          format: biginteger
      required:
        - account
        - value

    EthAssetType:
      type: object
      properties:
        contract:
          $ref: "#/components/schemas/EthAddress"
      required:
        - contract
      oneOf:
        - $ref: "#/components/schemas/ERC1155LazyAsset"
        - $ref: "#/components/schemas/ERC721LazyAsset"
        - $ref: "#/components/schemas/ERC1155Asset"
        - $ref: "#/components/schemas/ERC721Asset"
        - $ref: "#/components/schemas/ERC20Asset"
        - $ref: "#/components/schemas/EthereumAsset"

    EthAsset:
      type: object
      properties:
        assetType:
          $ref: "#/components/schemas/EthAssetType"
        value:
          type: number
          format: biginteger
      required:
        - assetType
        - value

    ERC1155LazyAsset:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - ERC1155_Lazy
        tokenId:
          type: number
          format: biginteger
        uri:
          type: string
        supply:
          type: number
          format: biginteger
        creators:
          type: array
          items:
            $ref: "#/components/schemas/EthCreator"
        royalties:
          type: array
          items:
            $ref: "#/components/schemas/EthRoyalty"
        signature:
          type: array
          items:
            $ref: "#/components/schemas/Binary"
      required:
        - "@type"
        - tokenId
        - uri
        - creators
        - royalties
        - signature

    ERC721LazyAsset:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - ERC721_Lazy
        tokenId:
          type: number
          format: biginteger
        uri:
          type: string
        creators:
          type: array
          items:
            $ref: "#/components/schemas/EthCreator"
        royalties:
          type: array
          items:
            $ref: "#/components/schemas/EthRoyalty"
        signature:
          type: array
          items:
            $ref: "#/components/schemas/Binary"
      required:
        - "@type"
        - tokenId
        - uri
        - creators
        - royalties
        - signature

    ERC1155Asset:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - ERC1155
        tokenId:
          type: number
          format: biginteger
      required:
        - "@type"
        - tokenId

    ERC721Asset:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - ERC721
        tokenId:
          type: number
          format: biginteger
      required:
        - "@type"
        - tokenId

    ERC20Asset:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - ERC20
      required:
        - "@type"

    EthereumAsset:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - ETH
      required:
        - "@type"

    #################### Item - Flow ####################

    FlowItem:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - FLOW
        blockchain:
          type: string
          enum:
            - FLOW
        id:
          $ref: "#/components/schemas/FlowItemId"
        tokenId:
          type: number
          format: biginteger
        collection:
          $ref: "#/components/schemas/FlowContract"
        creators:
          type: array
          items:
            $ref: "#/components/schemas/FlowCreator"
        owners:
          type: array
          items:
            $ref: "#/components/schemas/FlowAddress"
        royalties:
          type: array
          items:
            $ref: "#/components/schemas/FlowRoyalty"
      required:
        - blockchain
        - id
        - tokenId
        - collection
        - creators
        - owners
        - royalties

    FlowCreator:
      type: object
      properties:
        account:
          $ref: "#/components/schemas/FlowAddress"
        value:
          type: number
          format: bigdecimal
      required:
        - account
        - value

    FlowRoyalty:
      type: object
      properties:
        account:
          $ref: "#/components/schemas/FlowAddress"
        value:
          type: number
          format: bigdecimal
      required:
        - account
        - value

    #################### Ownership - Flow ####################

    FlowOwnership:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/FlowOwnershipId"
        contract:
          $ref: "#/components/schemas/FlowContract"
        tokenId:
          type: number
          format: biginteger
        owner:
          type: array
          items:
            $ref: "#/components/schemas/FlowAddress"
      required:
        - id
        - contract
        - tokenId
        - owner

    #################### Order - Flow ####################

    FlowOrder:
      type: object
      properties:
        id:
          type: number
          format: biginteger
        type:
          $ref: "#/components/schemas/FlowOrderType"
        maker:
          $ref: "#/components/schemas/FlowAddress"
        taker:
          $ref: "#/components/schemas/FlowAddress"
        make:
          $ref: "#/components/schemas/FlowAsset"
        take:
          $ref: "#/components/schemas/FlowAsset"
        data:
          $ref: "#/components/schemas/FlowOrderDataV1"
      required:
        - id
        - type
        - maker
        - make
        - take
        - data

    FlowOrderType:
      type: string
      enum:
        - RARIBLE_FLOW_V1

    FlowOrderPayout:
      type: object
      properties:
        account:
          $ref: "#/components/schemas/FlowAddress"
        value:
          type: number
          format: biginteger
      required:
        - account
        - value

    FlowOrderOriginFee:
      type: object
      properties:
        account:
          $ref: "#/components/schemas/FlowAddress"
        value:
          type: number
          format: biginteger
      required:
        - account
        - value

    FlowOrderDataV1:
      type: object
      properties:
        dataType:
          type: string
          enum:
            - DATA_V1
        payouts:
          type: array
          items:
            $ref: "#/components/schemas/FlowOrderPayout"
        originFees:
          type: array
          items:
            $ref: "#/components/schemas/FlowOrderOriginFee"
      required:
        - dataType
        - payouts
        - originFees

    FlowAsset:
      type: object
      properties:
        assetType:
          $ref: "#/components/schemas/FlowAssetType"
        value:
          type: number
          format: biginteger
      required:
        - assetType
        - value

    FlowAssetType:
      type: object
      properties:
        contract:
          $ref: "#/components/schemas/FlowAddress"
      required:
        - contract
      oneOf:
        - $ref: "#/components/schemas/FlowAssetTypeNft"
        - $ref: "#/components/schemas/FlowAssetTypeFt"

    FlowAssetTypeNft:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - FLOW_NFT
        tokenId:
          type: number
          format: biginteger
      required:
        - "@type"

    FlowAssetTypeFt:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - FLOW_FT
      required:
        - "@type"

    #################### Referenced Types ####################

    EthAddress:
      type: string
      example: "0x60f80121c31a0d46b5279700f9df786054aa5ee5"
    EthBlockchain:
      type: string
      enum:
        - ETHEREUM
        - POLYGON
    EthItemId:
      type: string
      example: "{blockchain}:${collection}:${tokenId}"
    EthOwnershipId:
      type: string
      example: "${blockchain}:${collection}:${tokenId}:${owner}"

    FlowAddress:
      type: string
      example: "0x5c075acc71f2f41c"
    FlowContract:
      type: string
      example: "A.${FlowAddress}.${string}"
    FlowItemId:
      type: string
      example: "FLOW:${FlowAddress}:${tokenId}"
    FlowOwnershipId:
      type: string
      example: "${blockchain}:${collection}:${tokenId}:${owner}"

    Word:
      type: string
    Binary:
      type: string