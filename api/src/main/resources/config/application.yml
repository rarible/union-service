application:
  project: protocol

server:
  shutdown: graceful
  port: 8080

spring:
  application.name: union-api
  jackson:
    mapper:
      ACCEPT_CASE_INSENSITIVE_ENUMS: true
    deserialization:
      FAIL_ON_UNKNOWN_PROPERTIES: false
    default-property-inclusion: non_null
  main:
    banner-mode: log
    web-application-type: reactive

rarible:
  core:
    apm:
      agent:
        enabled: true
        server: http://elk_apm-server:8200
        packages: com.rarible.protocol.union.api
      web:
        filter:
          enabled: true
      annotation:
        enabled: true
  ethereum:
    converter:
      enabled: true
  loader:
    broker-replica-set: ${kafka.hosts}
    topicsPrefix: protocol.${application.environment}.union.internal.loader
    enableWorkers: false
    enableNotifications: false
    enableRetrySchedulerJob: false

api:
  openapi:
    baseUrl: "https://api-dev.rarible.org"
    description: "Development (Ropsten, Mumbai, Hangzhou)"

integration:
  ethereum:
    enabled: ${consul.ethereum.enabled:true}
    auctionContracts: ${consul.ethereum.auctionContracts:}
  polygon:
    enabled: ${consul.polygon.enabled:true}
    auctionContracts: ${consul.polygon.auctionContracts:}
  flow:
    enabled: ${consul.flow.enabled:true}
    auctionContracts: ${consul.flow.auctionContracts:}
  tezos:
    enabled: ${consul.tezos.enabled:true}
    client:
      url: ${consul.tezos.api.baseUrl:}
    auctionContracts: ${consul.tezos.auctionContracts:}
  solana:
    enabled: ${consul.solana.enabled:false}
  immutablex:
    enabled: ${consul.immutablex.enabled:true}
    client:
      url: ${consul.immutablex.api.baseUrl:}
    scanner:
      job:
        fixedDelay: 5
        initialDelay:
          mints: 1
          transfers: 2
          trades: 3
          deposits: 4
          withdrawals: 5
          orders: 6

common:
  producer:
    broker-replica-set: ${kafka.hosts}
  currency:
    refresh:
      cron: "0 0/30 * * * *"
  useLegacyRepository: true
  feature-flags:
    enableRevertedActivityEventSending: false
    enableOwnershipSourceEnrichment: false
    enableItemLastSaleEnrichment: true

meta:
  ipfsGateway: "https://rarible.mypinata.cloud/"
  mediaFetchTimeout: 10000
  mediaFetchMaxSize: 131072 # 128 Kb
  openSeaProxyUrl: ${consul.meta.openSeaProxyUrl}
  http-client:
    type: KTOR_CIO
    thread-count: 1
    time-out: 10000
    total-connection: 1000

# Disable verbose logs of Apache HTTP client used to load content media metadata.
logging:
  level:
    org.apache.http: ERROR
